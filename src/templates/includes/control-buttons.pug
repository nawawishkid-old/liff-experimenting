#forms-wrapper
    each val in ['text', 'image', 'templateButton', 'templateConfirm', 'templateCarousel', 'templateImageCarousel', 'location']
        - const scheme = fieldSchemes[val];
        if typeof scheme === 'undefined'
            - continue

        .box
            .title.is-4 #{val} Message
            form(id=scheme.id novalidate)
                each field in scheme.fields 
                    - const { attributes } = field;
                    if attributes.type === 'hidden'
                        input&attributes(attributes)
                        - continue
                    .field
                        label.label(for=attributes.name)
                            if attributes.required
                                small.has-text-danger * 
                            | #{field.label}
                            span.field-info
                                if field.description
                                    span.description-icon.icon.has-text-info(data-for=attributes.name)
                                        i.fas.fa-info-circle
                                - const isRequired = attributes.required;
                                // small.required-status.has-text-weight-light(class=`has-text-${isRequired ? 'danger' : 'info'}`)= isRequired ? 'required' : 'optional'

                        .control
                            if field.type === 'select'
                                select.select&attributes(attributes)
                                    each option in field.options
                                        option(value=option.value)= option.title
                            else if field.type === 'textarea'
                                textarea.textarea&attributes(attributes)
                            else
                                //- define Bulma's form elements class
                                if ['checkbox', 'radio', 'file'].some(t => t === attributes.type)
                                    - attributes.class = attributes.type
                                else
                                    - attributes.class = 'input'

                                input&attributes(attributes)
                        .error-message
                            p.builtin-message.help.is-danger
                        if field.description
                            .field-description.collapsible.collapse(data-for=attributes.name)
                                .notification.is-info
                                    button.delete(type="button" tabindex="-1")
                                    //- unescaped
                                    | !{field.description}

                .field
                    .control
                        button.button.is-outlined.is-link.submit-button(data-message-type=val)= 'send ' + val
